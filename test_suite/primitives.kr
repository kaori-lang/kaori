/* test primitive vars. & operations */

fun test_numbers() -> bool {
    $a = 10.0;
    $b = -2.0;

    // test arithmetic
    $sum_a_b = a + b;
    $diff_a_b = a - b;
    $prod_a_b = a * b;
    $quot_a_b = a / b;

    if sum_a_b != 8.0 {
        return false;
    }

    if diff_a_b != 12.0 {
        return false;
    }

    if prod_a_b != -20.0 {
        return false;
    }

    if quot_a_b != -5.0 {
        return false;
    }

    return true;
}


fun test_newton() -> bool {
    /* approximate magnitude of the 2-D vector of <x, y> using Newton's Method */
    $x = 8.0;
    $y = 4.0;

    $dist_squ = x * x + y * y;
    $guess = 7.25;

    for $iter = 0; iter < 4; iter += 1 {
        guess = 0.5 * ( guess + dist_squ / guess );
    }

    /* max allowed error in magnitude approximation */
    $max_elipson = 0.01;

    /* expected answer: D_target = sqrt(80) */
    $target_answer = 8.944;

    print(guess);
    print(target_answer);

    return (target_answer - guess) < max_elipson;
}

fun main() {
    /* test arithmetic: 1 is an error */
    if !test_numbers() {
        print(1);
    }

    /* test complex arithmetic: 1 is an error */
    if !test_newton() {
        print(1);
    }

   
}

